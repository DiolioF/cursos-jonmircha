html {
    box-sizing: border-box;
    font-size: 16px;
    font-family: sans-serif;
    scroll-behavior: smooth;
}

*,
*::after,
*::before {
    box-sizing: inherit;
}

a[href="#top"] {
    margin: 1rem;
    display: block;
    font-size: 3rem;
    text-align: center;
    text-decoration: none;
}

p {
    margin: 0;
}

h2 {
    margin-top: 50vh;
    text-align: center;
}

img {
    margin: auto;
    display: block;
    max-width: 100%;
    height: auto;
}

.menu {
    margin-bottom: 100vh;
    font-size: 125%;
}

.menu li {
    margin-bottom: 1rem;
}

.container {
    margin: 0 auto;
    width: 80%;
    height: 80vh;
    background-color: #222;
    border: medium solid #000;
}

.item {
    padding: 1rem;
    font-size: 1.25rem;
    background-color: #666;
    border: medium solid #999;
}

.sub-item {
    padding: 1rem;
    background-color: #ddd;
    border: medium solid #ccc;
}

.separador {
    height: 7rem;
    border-bottom: thin solid black;
}


.grid-explicit {
    display: grid;
    /* Grid de 3cx3r */
    grid-template-columns: 50% 100px 1fr;
    grid-template-rows: 2rem 20vh 30%;
    /* Grid de 5c*4r */
    grid-template-columns: repeat(5, 20%);
    grid-template-rows: repeat(4, auto);
    grid-template-rows: repeat(4, 1fr);
    /* Grid de 4c*5r */
    grid-template-columns: 20% repeat(2, 30%) 20%;
    grid-template-rows: repeat(5, auto);
    /* Gap: row column */
    gap: 1rem 1rem;
    gap: 1vh 1vw;
}


/* Posicionamiento con Grid Lines */

.grid-explicit .item:nth-child(10) {
    color: rgb(0, 225, 255);
    grid-row-start: 2;
    grid-row-end: 3;
    grid-column-start: 2;
    grid-column-end: 3;
    grid-row: 2 / 3;
    grid-column: 3/5;

    /* grid area: grid-row-start / grid-column-start / grid-row-end / grid-column-end  */

    grid-area: 2/3 / 3/5;

}

.grid-explicit .item:nth-child(12) {
    color: chocolate;
    grid-row: span 2;
    grid-column: span 3;
}


.grid-explicit .item:nth-child(15) {
    color: rgb(255, 0, 255);
    grid-row: 1 / span 2;
    grid-column: 1 / span 2;
    /* grid-area: 1 / 1 / span 3 / span 4; */

}

.grid-line-names {
    display: grid;
    /* Grid 3c x 3r */
    /* grid-template-columns: repeat(3, 1fr); */
    /* grid-template-rows: repeat(3, 1fr); */
    grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4];
    grid-template-rows: [linea-r1] auto [linea-r2] auto [linea-r3] auto [linea-r4];
}

.grid-line-names .item:nth-child(3) {
    color: cyan;
    grid-area: linea-r3 / linea-c1 / linea-r4 / linea-c4;
}

.grid-areas {
    display: grid;
    /* grid 2c x 3r */
    grid-template-columns: 1fr 200px;
    grid-template-rows: 100px repeat(2, 1fr) 60px;
    grid-template-areas:
        "header header"
        "content sidebar"
        "content ."
        "footer footer"
    ;
}

.grid-areas .header {
    grid-area: header;
}

.grid-areas .content {
    grid-area: content;
}

.grid-areas .sidebar {
    grid-area: sidebar;
}

.grid-areas .footer {
    grid-area: footer;
}

.grid-implicit {
    width: 49.5%;
    display: grid;
    display: inline-grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 200px);
}

.grid-flow {
    display: grid;
    /* Grid de 5c x 3r */
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(3, 150px);
    grid-auto-flow: row;
    grid-auto-rows: 100px;
    grid-auto-flow: column;
    grid-auto-columns: 50px;
}


.grid-flow-dense {
    display: grid;
    /* Grid 5c x 4r */
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 200px);
    grid-auto-flow: row dense;
    grid-auto-flow: column dense;
}



.grid-flow-dense .item:nth-child(11) {
    color: cyan;
    grid-row: span 3;
    grid-column: span 3;
}

.grid-layers {
    display: grid;
    /* grid 4 x 4 */
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
}

.grid-layers .item:nth-child(1) {
    background-color: yellow;
    grid-column: 1 / span 2;
    grid-row: 1 / span 2;
}

.grid-layers .item:nth-child(2) {
    background-color: rgb(0, 36, 243);
    grid-column: 3 / span 2;
    grid-row: 1 / span 2;
}

.grid-layers .item:nth-child(3) {
    background-color: rgb(8, 192, 23);
    grid-column: 1 / span 2;
    grid-row: 3 / span 2;
}

.grid-layers .item:nth-child(4) {
    background-color: rgb(255, 123, 0);
    grid-column: 3 / span 2;
    grid-row: 3 / span 2;
}

.grid-layers .item:nth-child(5) {
    background-color: rgb(132, 0, 255);
    grid-column: 2 / span 2;
    grid-row: 2 / span 2;
}

.grid-order {
    display: grid;
    /* Grid 3c x 2r */
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
}

.grid-order .item:nth-child(1) {
    /* default es 0, -1 0 1  cuan mas pequeño el numero mas adelantate estara, cuanto mas grande mas adelante*/
    order: 5;
}

.grid-order .item:nth-child(2) {
    order: 2;
}

.grid-order .item:nth-child(5) {
    order: -1;
}

.grid-align {
    display: grid;
    /* Grid 3c x 2r */
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(2, 200px);
    justify-items: stretch;
    justify-items: start;
    justify-items: end;
    justify-items: center;
    align-items: stretch;
    align-items: start;
    align-items: end;
    align-items: center;
}

.grid-align .item:nth-child(4) {
    justify-self: start;
    align-self: start;
}

.grid-align-tracks {
    display: grid;
    /* grid de 3c x 2r */
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(2, 200px);
    justify-content: start;
    justify-content: end;
    justify-content: center;
    justify-content: space-between;
    justify-content: space-around;
    justify-content: space-evenly;

    align-content: start;
    align-content: end;
    align-content: center;
    align-content: space-between;
    align-content: space-around;
    align-content: space-evenly;
}


.grid-min-max {
    display: grid;
    /* Grid de  4c x auto rows*/
    grid-template-columns: repeat(4, 1fr);
    grid-template-columns: repeat(4, minmax(100px, 200px));
    grid-template-columns: repeat(4, minmax(min-content, 200px));
    grid-template-columns: repeat(4, minmax(100px, min-content));
    grid-template-columns: repeat(4, minmax(100px, max-content));
    grid-template-columns: repeat(4, minmax(max-content, 200px));
    grid-template-columns: repeat(4, minmax(min-content, max-content));

}


.grid-repeat {
    display: grid;
    /* Grid de 4c x auto rows */
    grid-template-columns: repeat(1, 10% 20% 30% 40%);
    grid-template-rows: repeat(2, 10vh 20vh);
    /* grid-auto-flow: row; */
    grid-auto-rows: 10vh 20vh;
}

.grid-dynamics {
    display: grid;
    /* Grid de 4c x auto rows */
    grid-template-columns: repeat(4, 100px);
    /* Auto fill rellena la grid con tracks generados dinamicamente */
    grid-template-columns: repeat(auto-fill, 100px);
    /* Auto-fit ajusta la grid con los grid items existentes */
    grid-template-columns: repeat(auto-fit, 100px);
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
}

.grid-responsive {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}


.grid-nested {
    display: grid;
    /* Grid de 3c x auto rows */
    grid-template-columns: repeat(3, 1fr);
}

.grid {
    display: grid;
    /* grid de 3c x 4r */
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
}

.subgrid {
    /* Para que la caracteristica de subgrid funcione es necesario hacer los siguientes pasos: 
    1) Definir explicitamnete el tamaño que ocupara el elemento que tendra la subgrid dentro del contenedor padre, es decir definir sus propiedades grid-column y grid-row
    2)Aplicar display grid al elemento que aplicara subgrid
    3)Aplicar el valor de subgrid a las columnas, a las filas o ambas depende de cómo se requiera*/
    grid-column: span 3;
    grid-row: span 2;
    display: grid;
    grid-template-columns: subgrid;
    grid-template-rows: subgrid;
}